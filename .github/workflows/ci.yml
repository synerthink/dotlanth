name: CI

on:
  push:
    branches:
      - develop
      - main
  pull_request:
    branches:
      - '**'
  workflow_dispatch:

jobs:
  format-check:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      - name: Cache Cargo Registry
        uses: actions/cache@v3
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
          key: ${{ runner.os }}-cargo-registry-${{ hashFiles('**/Cargo.lock') }}
          restore-keys: |
            ${{ runner.os }}-cargo-registry-

      - name: Install dependencies
        run: sudo apt-get update && sudo apt-get install -y curl pkg-config libssl-dev

      - name: Setup Rust
        run: |
          rustup update stable
          rustup component add rustfmt

      - name: Check formatting
        run: cargo fmt --all -- --check

  lint-check:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      - name: Cache Cargo Registry
        uses: actions/cache@v3
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
          key: ${{ runner.os }}-cargo-registry-${{ hashFiles('**/Cargo.lock') }}
          restore-keys: |
            ${{ runner.os }}-cargo-registry-

      - name: Install dependencies
        run: sudo apt-get update && sudo apt-get install -y curl pkg-config libssl-dev

      - name: Setup Rust
        run: |
          rustup default nightly
          rustup component add clippy rust-src

      - name: Run Clippy
        run: cargo clippy --workspace -- -D warnings

  test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      - name: Cache Cargo Registry
        uses: actions/cache@v3
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
          key: ${{ runner.os }}-cargo-registry-${{ hashFiles('**/Cargo.lock') }}
          restore-keys: |
            ${{ runner.os }}-cargo-registry-

      - name: Install dependencies
        run: sudo apt-get update && sudo apt-get install -y curl pkg-config libssl-dev

      - name: Setup Rust
        run: |
          rustup default nightly

      - name: Build
        run: cargo build --workspace

      - name: Test
        run: cargo test --workspace

      - name: Upload Coverage to Codecov
        uses: codecov/codecov-action@v3

  release-build:
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    steps:
      - uses: actions/checkout@v2

      - name: Cache Cargo Registry
        uses: actions/cache@v3
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
          key: ${{ runner.os }}-cargo-registry-${{ hashFiles('**/Cargo.lock') }}
          restore-keys: |
            ${{ runner.os }}-cargo-registry-

      - name: Install dependencies
        run: sudo apt-get update && sudo apt-get install -y curl pkg-config libssl-dev

      - name: Setup Rust
        run: rustup default nightly

      - name: Build Release
        run: cargo build --workspace --release